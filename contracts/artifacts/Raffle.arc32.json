{
  "hints": {
    "createApplication(application,uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optInToApplication()void": {
      "call_config": {
        "opt_in": "CALL"
      }
    },
    "chooseWinningTicket(application)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "setWinner()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "claim(address)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "buyTicket(pay)uint64": {
      "call_config": {
        "no_op": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "numTicketsBought": {
          "type": "uint64",
          "key": "numTicketsBought"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "beaconApp": {
          "type": "uint64",
          "key": "beaconApp"
        },
        "finishRound": {
          "type": "uint64",
          "key": "finishRound"
        },
        "price": {
          "type": "uint64",
          "key": "price"
        },
        "numTicketsSold": {
          "type": "uint64",
          "key": "numTicketsSold"
        },
        "winningTicket": {
          "type": "uint64",
          "key": "winningTicket"
        },
        "winner": {
          "type": "bytes",
          "key": "winner"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 1,
      "num_uints": 5
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 1
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDk="
  },
  "contract": {
    "name": "Raffle",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "beaconApp",
            "type": "application",
            "desc": ""
          },
          {
            "name": "price",
            "type": "uint64",
            "desc": ""
          },
          {
            "name": "length",
            "type": "uint64",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "optInToApplication",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "chooseWinningTicket",
        "args": [
          {
            "name": "_beaconApp",
            "type": "application",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      },
      {
        "name": "setWinner",
        "args": [],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "claim",
        "args": [
          {
            "name": "winner",
            "type": "address",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "void",
          "desc": ""
        }
      },
      {
        "name": "buyTicket",
        "args": [
          {
            "name": "payTxn",
            "type": "pay",
            "desc": ""
          }
        ],
        "desc": "",
        "returns": {
          "type": "uint64",
          "desc": ""
        }
      }
    ]
  }
}